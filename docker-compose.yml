version: '3.7'

services:

  postgres:
    image: postgres:alpine
    container_name: postgres
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db.sh:/docker-entrypoint-initdb.d/db.sh
    environment:
      POSTGRES_USER: ${TYPEORM_USERNAME}
      POSTGRES_PASSWORD: ${TYPEORM_PASSWORD}
      POSTGRES_DB: taskmanager
    ports:
      - ${TYPEORM_PORT}:${TYPEORM_PORT}
    networks:
      - taskmanagernet 

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    volumes:
      - pgadmindata:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@taskmanager.com
      PGADMIN_DEFAULT_PASSWORD: taskmanager
    ports:
      - '8080:80'    
    depends_on:
      - postgres  
    networks:
      - taskmanagernet  

  redis:
    image: 'redis:alpine'
    container_name: redis
    restart: unless-stopped
    volumes:
      - redisdata:/data
    ports:
      - ${CACHE_PORT}:${CACHE_PORT}
    networks:
      - taskmanagernet  

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: dev:redis:${CACHE_PORT}:1,test:redis:${CACHE_PORT}:2
    ports:
      - '8081:8081'    
    depends_on:
      - redis  
    networks:
      - taskmanagernet  

  taskmanager:
    build:
      context: ./ 
      dockerfile: Dockerfile
      target: dev
    image: taskmanager:dev
    container_name: taskmanager
    restart: unless-stopped
    volumes:
      - ./:/usr/src/taskmanager
      - dependencies:/usr/src/taskmanager/node_modules
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
      - ${DEBUG_PORT}:${DEBUG_PORT}
    depends_on:
      - redis  
      - postgres
    networks:
      - taskmanagernet  

volumes:
  pgdata:
  redisdata:
  pgadmindata:  
  dependencies:  

networks:
  taskmanagernet:      
